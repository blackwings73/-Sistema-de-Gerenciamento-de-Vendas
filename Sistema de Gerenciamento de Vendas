-- Criação do Banco de Dados
CREATE DATABASE sistema_vendas;
USE sistema_vendas;

-- Criação das Tabelas

-- Tabela Clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefone VARCHAR(20)
);

-- Tabela Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    quantidade_estoque INT NOT NULL
);

-- Tabela Vendas
CREATE TABLE Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_produto INT,
    quantidade INT,
    data_venda DATE,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);

-- Inserção de Dados

-- Inserir Clientes
INSERT INTO Clientes (nome, email, telefone) VALUES
('Ana Pereira', 'ana.pereira@example.com', '123456789'),
('Carlos Lima', 'carlos.lima@example.com', '987654321'),
('Maria Costa', 'maria.costa@example.com', '456123789');

-- Inserir Produtos
INSERT INTO Produtos (nome, preco, quantidade_estoque) VALUES
('Notebook', 3000.00, 10),
('Smartphone', 1500.00, 20),
('Fone de Ouvido', 200.00, 50);

-- Inserir Vendas
INSERT INTO Vendas (id_cliente, id_produto, quantidade, data_venda) VALUES
(1, 1, 1, '2024-09-01'),  -- Ana Pereira comprou 1 Notebook
(2, 2, 2, '2024-09-02'),  -- Carlos Lima comprou 2 Smartphones
(1, 3, 3, '2024-09-03'),  -- Ana Pereira comprou 3 Fones de Ouvido
(3, 1, 1, '2024-09-04'),  -- Maria Costa comprou 1 Notebook
(2, 3, 1, '2024-09-05');  -- Carlos Lima comprou 1 Fone de Ouvido

-- Consultas e Relatórios

-- 1. Mostrar todas as vendas realizadas, incluindo o nome do cliente e o nome do produto.
SELECT V.id_venda, C.nome AS nome_cliente, P.nome AS nome_produto, V.quantidade, V.data_venda
FROM Vendas V
JOIN Clientes C ON V.id_cliente = C.id_cliente
JOIN Produtos P ON V.id_produto = P.id_produto;

-- 2. Mostrar todas as compras realizadas por um cliente específico. (exemplo para cliente com id_cliente = 1)
SELECT V.id_venda, P.nome AS nome_produto, V.quantidade, V.data_venda
FROM Vendas V
JOIN Produtos P ON V.id_produto = P.id_produto
WHERE V.id_cliente = 1;

-- 3. Exibir o total de vendas realizadas por produto.
SELECT P.nome AS nome_produto, SUM(V.quantidade) AS total_vendas
FROM Vendas V
JOIN Produtos P ON V.id_produto = P.id_produto
GROUP BY P.nome;

-- Atualização e Deleção de Dados

-- 1. Atualizar o estoque de um produto após uma venda. (exemplo: reduzir o estoque de Notebook após uma venda)
UPDATE Produtos
SET quantidade_estoque = quantidade_estoque - 1
WHERE id_produto = 1;  -- Ajustar conforme o produto vendido

-- 2. Atualizar as informações de um cliente. (exemplo: atualizar o telefone de cliente com id_cliente = 1)
UPDATE Clientes
SET telefone = '1122334455'
WHERE id_cliente = 1;

-- 3. Deletar uma venda e, se necessário, deletar o cliente associado. (exemplo: deletar venda com id_venda = 1 e cliente associado se não tiver mais vendas)
-- Primeiro, exclua a venda.
DELETE FROM Vendas
WHERE id_venda = 1;

-- Em seguida, exclua o cliente se não houver mais vendas associadas a ele.
DELETE FROM Clientes
WHERE id_cliente = 1
AND NOT EXISTS (
    SELECT 1 FROM Vendas WHERE id_cliente = 1
);

-- 4. Remover um produto e todas as vendas associadas a esse produto. (exemplo: remover o produto com id_produto = 3)
-- Primeiro, exclua as vendas associadas ao produto.
DELETE FROM Vendas
WHERE id_produto = 3;

-- Em seguida, exclua o produto.
DELETE FROM Produtos
WHERE id_produto = 3;
